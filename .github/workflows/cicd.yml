name: CICD

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'alpha'
      - 'beta'
  pull_request:
    types: [opened, reopened, synchronize]

env:
  semantic_version: 19

jobs:
  semantic-release:
    name: Bump Version
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ (steps.semantic.outputs.new_release_published && steps.semantic.outputs.new_release_version) || '0.0.1' }}
    steps:
    - uses: actions/checkout@v3

    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v3.1.1
      id: semantic
      with:
        semantic_version: ${{ env.semantic_version }}
        dry_run: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tests:
    name: Tests
    runs-on: windows-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        global-json-file: src/global.json

    - name: Test
      working-directory: src
      run: dotnet test -c Release /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura

    - name: Coverage
      uses: codecov/codecov-action@v3
      with:
        file: coverage.cobertura.xml

  build_web:
    name: Build & Deploy Web
    needs: [semantic-release, tests]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        global-json-file: src/global.json

    - name: Publish
      working-directory: src/KubeUI.Web
      run: dotnet publish -c Release -p:Version=${{ needs.semantic-release.outputs.new_release_version }} -o bin/publish

    - name: Deploy
      uses: netlify/actions/cli@master
      with:
        args: deploy ${{ (github.ref == 'refs/heads/alpha' && '--prod') || '' }} --json -d src/KubeUI.Web/bin/publish/wwwroot
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

    - name: Purge CDN
      if: github.ref == 'refs/heads/alpha'
      run: |
        $Params = @{
          Method = 'Post'
          URI = 'https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_SITE_ID }}/purge_cache'
          Headers = @{
            'X-Auth-Email'= 'admin@kubeui.com';
            'X-Auth-Key'= '${{ secrets.CLOUDFLARE_AUTH_TOKEN }}'
          }
          Body = '{"purge_everything":true}'
          ContentType = 'application/json'
        }
        Invoke-RestMethod @Params
      shell: pwsh

    - name: Publish
      working-directory: src/KubeUI.Web
      run: Compress-Archive -Path bin/publish/wwwroot/* -DestinationPath KubeUI-${{ needs.semantic-release.outputs.new_release_version }}-web.zip
      shell: pwsh

    - uses: actions/upload-artifact@v3
      with:
        name: KubeUI-web
        path: src/KubeUI.Web/KubeUI-${{ needs.semantic-release.outputs.new_release_version }}-web.zip

  build_hybrid:
    name: Build Hybrid
    needs: [semantic-release, tests]
    timeout-minutes: 10
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        include:
        - os: windows-latest
          RUNTIME: win-x64
          FOLDER: src/KubeUI.WPF
          ARGS: --self-contained -p:PublishSingleFile=true -p:DebugType=None -p:IncludeNativeLibrariesForSelfExtract=true
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        global-json-file: src/global.json

    - name: Publish
      working-directory: ${{matrix.FOLDER}}
      run: dotnet publish -c Release -r ${{matrix.RUNTIME}} -p:Version=${{ needs.semantic-release.outputs.new_release_version }} -o bin/publish ${{matrix.ARGS}}

    - name: Publish
      working-directory: ${{matrix.FOLDER}}
      run: Compress-Archive -Path bin/publish/* -DestinationPath KubeUI-${{ needs.semantic-release.outputs.new_release_version }}-${{matrix.RUNTIME}}.zip
      shell: pwsh

    - uses: actions/upload-artifact@v3
      with:
        name: KubeUI-${{matrix.RUNTIME}}
        path: ${{matrix.FOLDER}}/KubeUI-${{ needs.semantic-release.outputs.new_release_version }}-${{matrix.RUNTIME}}.zip

  release:
    if: needs.semantic-release.outputs.new_release_published == 'true'
    name: Create Release
    needs: [build_web, build_hybrid]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Download artifact win-x64
      uses: actions/download-artifact@v3
      with:
        name: KubeUI-win-x64
        path: dist/

    - name: Download artifact web
      uses: actions/download-artifact@v3
      with:
        name: KubeUI-web
        path: dist/

    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v3.1.1
      with:
        semantic_version: ${{ env.semantic_version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
