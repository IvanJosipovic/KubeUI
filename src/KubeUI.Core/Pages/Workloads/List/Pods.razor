@page "/list/v1/pod"

<ListGeneric TItem="V1Pod">
    <Columns>
        <ColumnComponent TItem="V1Pod" Name="Containers" Object="(x => x.Spec.Containers?.Count)" >
            <DisplayContent>
                @foreach (var container in context.Item1?.Status?.ContainerStatuses.EnsureNotEmpty())
                {
                    @if (container.State?.Running != null)
                    {
                        <MudAvatar Style="height:10px; width:10px; margin-right: 2px;" Color="Color.Success"></MudAvatar>
                    }
                    else if (container.State?.Terminated?.Reason == "Error")
                    {
                        <MudAvatar Style="height:10px; width:10px; margin-right: 2px" Color="Color.Dark"></MudAvatar>
                    }
                    else
                    {
                        <MudAvatar Style="height:10px; width:10px; margin-right: 2px" Color="Color.Primary"></MudAvatar>
                    }
                }
                @foreach (var container in context.Item1?.Status?.InitContainerStatuses.EnsureNotEmpty())
                {
                    @if (container.State?.Terminated?.Reason == "Completed")
                    {
                        <MudAvatar Style="height:10px; width:10px; margin-right: 2px;" Color="Color.Dark"></MudAvatar>
                    }
                    else if (container.State?.Terminated?.Reason == "Error")
                    {
                        <MudAvatar Style="height:10px; width:10px; margin-right: 2px" Color="Color.Error"></MudAvatar>
                    }
                    else
                    {
                        <MudAvatar Style="height:10px; width:10px; margin-right: 2px" Color="Color.Primary"></MudAvatar>
                    }
                }
            </DisplayContent>
        </ColumnComponent>
        <ColumnComponent TItem="V1Pod" Name="Restarts" Object="(x => x.Status?.ContainerStatuses?.Sum(x => x.RestartCount))" />
        <ColumnComponent TItem="V1Pod" Name="Controlled By" Object="(x => x.Metadata.OwnerReferences.FirstOrDefault()?.Kind)">
            <DisplayContent>
                @if (context.Item1.Metadata.OwnerReferences != null && context.Item1.Metadata.OwnerReferences.Any())
                {
                <MudLink @onclick="@(x => context.Item2.DisplayDetails(context.Item1.Metadata.NamespaceProperty, context.Item1.Metadata.OwnerReferences[0].ApiVersion, context.Item1.Metadata.OwnerReferences[0].Kind, context.Item1.Metadata.OwnerReferences[0].Name))"
                    >@context.Item1.Metadata.OwnerReferences[0].Kind</MudLink>
                }
            </DisplayContent>
        </ColumnComponent>
        <ColumnComponent TItem="V1Pod" Name="Node" Object="(x => x.Spec.NodeName)">
            <DisplayContent>
                <MudLink @onclick="@(x => context.Item2.DisplayDetails(null, V1Node.KubeGroup, V1Node.KubeApiVersion, V1Node.KubeKind, context.Item1.Spec.NodeName))">@context.Item1.Spec.NodeName</MudLink>
            </DisplayContent>
        </ColumnComponent>
        <ColumnComponent TItem="V1Pod" Name="QoS" Object="(x => x.Status.QosClass)" />
        <ColumnComponent TItem="V1Pod" Name="Status" Object="(x => x.Status?.Phase)" >
            <DisplayContent>
                @{
                    var color = Color.Success;

                    if (context.Item1.Status?.Phase == "Failed")
                    {
                        color = Color.Error;
                    }
                    else if (context.Item1.Status?.Phase == "Pending")
                    {
                        color = Color.Warning;
                    };
                }
                <MudText Color="color" Typo="Typo.inherit">@context.Item1.Status?.Phase</MudText>
            </DisplayContent>
        </ColumnComponent>
    </Columns>
</ListGeneric>

@code {

}