@attribute [CascadingTypeParameter(nameof(TItem))]
@typeparam TItem where TItem : class, IKubernetesObject<V1ObjectMeta>, new()

@if (!string.IsNullOrEmpty(Version) && !string.IsNullOrEmpty(Kind))
{
    <CascadingValue Value="this" IsFixed="true">
        <ResizePanel Context="resize" Offset="140">
            <MudTable T="TItem" Items="this.ClusterManager.GetActiveCluster().GetObjects<TItem>(Version, Kind, Group)" Hover="true" Dense="true" SortLabel="Sort By" Virtualize="true" FixedHeader="true" Height="@resize" Breakpoint="Breakpoint.None" HorizontalScrollbar="true" >
                <ToolBarContent>
                    <MudText Typo="Typo.h6">@(Kind.AddSpacesBeforeCapitals())</MudText>
                    <MudSpacer />
                    <MudTextField T="string" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                    <MudSpacer />
                    <MudSelect T="string" Placeholder="Namespaces" MultiSelection="true" Class="mt-0" SelectedValues="ClusterManager.GetActiveCluster().GetSelectedNamespaces()" SelectedValuesChanged="x => ClusterManager.GetActiveCluster().SetSelectedNamespaces(x)" SelectAll="true" SelectAllText="Select all">
                        @foreach (var ns in this.ClusterManager.GetActiveCluster().GetObjects<V1Namespace>())
                        {
                            <MudSelectItem @key="ns" T="string" Value="@ns.Name()">@ns.Name()</MudSelectItem>
                        }
                    </MudSelect>
                </ToolBarContent>
                <HeaderContent>
                    @foreach (var col in this.Columns.Where(x => !x.Hide))
                    {
                        <MudTh @key="col" Style="@($"width: {col.Width}")">
                            @if (col.HeaderContent != null)
                            {
                                @col.HeaderContent;
                            } 
                            else
                            {
                                <MudTableSortLabel SortBy="col.Object" InitialDirection="col.Sort">@col.Name</MudTableSortLabel>        
                            }                
                        </MudTh>
                    }
                </HeaderContent>
                <RowTemplate>
                    @foreach (var col in this.Columns.Where(x => !x.Hide))
                    {
                        <MudTd @key="col" >
                            @if (col.DisplayContent != null)
                            {
                                @col.DisplayContent(new (context, this));
                            }
                            else
                            {
                                @col.Object?.Invoke(context);
                            }
                        </MudTd>
                    }
                </RowTemplate>
            </MudTable>
            @ChildContent
        </ResizePanel>
    </CascadingValue>
}
