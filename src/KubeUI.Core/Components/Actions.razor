@typeparam TItem where TItem : class, IKubernetesObject<V1ObjectMeta>, new()

<MudMenu Icon="@Icons.Material.Filled.MoreVert" Size="Size.Small">
    @if (string.IsNullOrEmpty(Item.Metadata.NamespaceProperty))
    {
        <MudMenuItem Href=@($"/details/{GroupApiVersionKind.From<TItem>().GroupApiVersion}/{Item.Kind}?Name={Item.Name()}")>Edit</MudMenuItem>
    }
    else
    {
        <MudMenuItem Href=@($"/details/{GroupApiVersionKind.From<TItem>().GroupApiVersion}/{Item.Kind}?Namespace={Item.Namespace()}&Name={Item.Name()}")>Edit</MudMenuItem>
    }

    <MudMenuItem OnClick="Delete">Delete</MudMenuItem>
</MudMenu>

@code {
    [Parameter] public TItem Item { get; set; }

    [Inject] private IDialogService Dialog { get; set; }

    [Inject] private ClusterManager ClusterManager { get; set; }

    private async Task Delete()
    {
        var parameters = new DialogParameters()
        {
            { "ContentText", $"Do you want to delete {Item.Name()}?" },
            { "ButtonText", "Delete" },
            { "Color", Color.Error }
        };

        var dialog = Dialog.Show<Dialog>("Delete", parameters, new DialogOptions() { CloseButton = true });

        if (!(await dialog.Result).Cancelled)
        {
            await ClusterManager.GetActiveCluster().Delete<TItem>(Item);
        }
    }
}