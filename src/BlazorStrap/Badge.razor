@inherits BootstrapComponentBase
@using  BlazorStrap.util

<DynamicElement TagName="@Tag" class="@classname" href="@Href" @onclick="@_onclick" Attributes="@UnknownParameters">
    @ChildContent
</DynamicElement>

@code {
    private string classname
    {
        get
        {
            var pill = IsPill ? "badge-pill" : "";
            return $"badge {pill} badge-{Color.ToDescriptionString()} {Class}".RemoveUnneededSpaces();
        }
    }
    private string Tag { get; set; } = "span";

    [Parameter] private Color Color { get; set; } = Color.Primary;
    [Parameter] private bool IsPill { get; set; }
    private string _href;
    [Parameter] private string Href
    {
        get => _href;
        set
        {
            _href = value;
            if (value != null || onclick.HasDelegate) { Tag = "a"; }
            else { Tag = "span"; }
        }
    }
    private EventCallback<UIMouseEventArgs> _onlick { get; set; }
    [Parameter] private EventCallback<UIMouseEventArgs> onclick
    {
        get => _onlick;

        set
        {
            _onlick = value;
            if (value.HasDelegate || Href != null) { Tag = "a"; }
            else { Tag = "span"; }
        }
    }
    [Parameter] private string Class { get; set; }
    [Parameter] private RenderFragment ChildContent { get; set; }

    void _onclick(UIMouseEventArgs e)
    {
        if (onclick.HasDelegate) onclick.InvokeAsync(e);
    }
}