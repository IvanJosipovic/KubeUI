@inherits BootstrapComponentBase
@using BlazorStrap.util

<DynamicElement Attributes="@UnknownParameters" TagName="@Tag" class="@classname" @onclick="@OnClick" disabled="@IsDisabled" type="@IsButton">
    @ChildContent
</DynamicElement>

@code {
    string classname
    {
        get
        {
            var disabled = IsDisabled && ListGroupType != ListGroupType.Button ? "disabled" : null;
            var active = IsActive ? "active" : null;
            var action = ListGroupType == ListGroupType.Button || ListGroupType == ListGroupType.Link ? "list-group-item-action" : null;
            var color = Color != Color.None ? $"list-group-item-{Color.ToDescriptionString()}" : null;
            return $"list-group-item {color} {action} {active} {disabled} {Class}".RemoveUnneededSpaces();
        }
    }
    string Tag => ListGroupType switch 
        {
            ListGroupType.Button => "button",
            ListGroupType.Link => "a",
            ListGroupType.List => "li",
            _ => "li"
        };

    string IsButton => Tag == "button" ? "button" : "";
    
    [Parameter] private bool IsActive { get; set; }
    [Parameter] private bool IsDisabled { get; set; }
    [Parameter] private ListGroupType ListGroupType { get; set; } = ListGroupType.List;
    [Parameter] private EventCallback<UIMouseEventArgs> OnClick { get; set; }
    [Parameter] private Color Color { get; set; } = Color.None;
    [Parameter] private string Class { get; set; }
    [Parameter] private RenderFragment ChildContent { get; set; }

}