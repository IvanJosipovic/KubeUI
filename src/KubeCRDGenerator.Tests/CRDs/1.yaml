apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: alerts.my.group.com
spec:
  group: my.group.com
  names:
    plural: alerts
    singular: alert
    kind: Alert
    listKind: AlertList
  scope: Namespaced
  versions:
    - name: v1beta1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: Alert is the Schema for the alerts API
          type: object
          properties:
            apiVersion:
              description: >-
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: >-
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: >-
                AlertSpec defines an alerting rule for events involving a list
                of objects
              type: object
              required:
                - propOne
              properties:
                enumString:
                  description: >-
                    enumString Description
                  type: string
                  default: option1
                  enum:
                    - option1
                    - option2
                eventSources:
                  description: Filter events based on the involved objects.
                  type: array
                  items:
                    description: >-
                      CrossNamespaceObjectReference contains enough information
                      to let you locate the typed referenced object at cluster
                      level
                    type: object
                    required:
                      - name
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: Kind of the referent
                        type: string
                        enum:
                          - Bucket
                          - GitRepository
                          - Kustomization
                          - HelmRelease
                          - HelmChart
                          - HelmRepository
                          - ImageRepository
                          - ImagePolicy
                          - ImageUpdateAutomation
                      matchLabels:
                        description: >-
                          MatchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an
                          element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains
                          only "value". The requirements are ANDed.
                        type: object
                        additionalProperties:
                          type: string
                      name:
                        description: Name of the referent
                        type: string
                        maxLength: 53
                        minLength: 1
                      namespace:
                        description: Namespace of the referent
                        type: string
                        maxLength: 53
                        minLength: 1
                arrayString:
                  description: >-
                    arrayString description
                  type: array
                  items:
                    type: string
                providerRef:
                  description: Send events using this provider.
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      description: Name of the referent
                      type: string
                suspend:
                  description: >-
                    This flag tells the controller to suspend subsequent events
                    dispatching. Defaults to false.
                  type: boolean
                intProp:
                  description: >-
                    int description
                  type: integer
                int64Prop:
                  description: >-
                    int description
                  type: integer
                  format: int64
            status:
              description: AlertStatus defines the observed state of Alert
              type: object
              default:
                observedGeneration: -1
              properties:
                conditions:
                  type: array
                  items:
                    description: >-
                      Condition contains details for one aspect of the current
                      state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path
                      .status.conditions.  For example, type FooStatus
                      struct{     // Represents the observations of a foo's
                      current state.     // Known .status.conditions.type are:
                      "Available", "Progressing", and "Degraded"     //
                      +patchMergeKey=type     // +patchStrategy=merge     //
                      +listType=map     // +listMapKey=type     Conditions
                      []metav1.Condition `json:"conditions,omitempty"
                      patchStrategy:"merge" patchMergeKey:"type"
                      protobuf:"bytes,1,rep,name=conditions"` 
                           // other fields }
                    type: object
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: >-
                          lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should
                          be when the underlying condition changed.  If that is
                          not known, then using the time when the API field
                          changed is acceptable.
                        type: string
                        format: date-time
                      message:
                        description: >-
                          message is a human readable message indicating details
                          about the transition. This may be an empty string.
                        type: string
                        maxLength: 32768
                      observedGeneration:
                        description: >-
                          observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance,
                          if .metadata.generation is currently 12, but the

                          .status.conditions[x].observedGeneration is 9, the
                          condition is out of date with respect to the current
                          state of the instance.
                        type: integer
                        format: int64
                        minimum: 0
                      reason:
                        description: >-
                          reason contains a programmatic identifier indicating
                          the reason for the condition's last transition.
                          Producers of specific condition types may define
                          expected values and meanings for this field, and
                          whether the values are considered a guaranteed API.
                          The value should be a CamelCase string. This field may
                          not be empty.
                        type: string
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                      type:
                        description: >-
                          type of condition in CamelCase or in
                          foo.example.com/CamelCase. --- Many .condition.type
                          values are consistent across resources like Available,
                          but because arbitrary conditions can be useful (see
                          .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is
                          (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        type: string
                        maxLength: 316
                        pattern: >-
                          ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  type: integer
                  format: int64
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=="Ready")].status
        - name: Status
          type: string
          jsonPath: .status.conditions[?(@.type=="Ready")].message
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
  conversion:
    strategy: None
