apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterpolicyreports.wgpolicyk8s.io
  uid: 677603ac-ba81-4d2c-97cb-693b4f54063f
  resourceVersion: '11211'
  generation: 1
  creationTimestamp: '2022-07-26T17:35:15Z'
  labels:
    app.kubernetes.io/component: kyverno
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/name: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.6.1
    kustomize.toolkit.fluxcd.io/name: aks-hub-gitops
    kustomize.toolkit.fluxcd.io/namespace: flux-system
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  managedFields:
    - manager: kustomize-controller
      operation: Apply
      apiVersion: apiextensions.k8s.io/v1
      time: '2022-07-26T17:35:15Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:controller-gen.kubebuilder.io/version: {}
          f:labels:
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:kustomize.toolkit.fluxcd.io/name: {}
            f:kustomize.toolkit.fluxcd.io/namespace: {}
        f:spec:
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
    - manager: kube-apiserver
      operation: Update
      apiVersion: apiextensions.k8s.io/v1
      time: '2022-07-26T17:35:16Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:conditions:
            k:{"type":"Established"}:
              .: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"NamesAccepted"}:
              .: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      subresource: status
  selfLink: >-
    /apis/apiextensions.k8s.io/v1/customresourcedefinitions/clusterpolicyreports.wgpolicyk8s.io
status:
  conditions:
    - type: NamesAccepted
      status: 'True'
      lastTransitionTime: '2022-07-26T17:35:15Z'
      reason: NoConflicts
      message: no conflicts found
    - type: Established
      status: 'True'
      lastTransitionTime: '2022-07-26T17:35:16Z'
      reason: InitialNamesAccepted
      message: the initial names have been accepted
  acceptedNames:
    plural: clusterpolicyreports
    singular: clusterpolicyreport
    shortNames:
      - cpolr
    kind: ClusterPolicyReport
    listKind: ClusterPolicyReportList
  storedVersions:
    - v1alpha2
spec:
  group: wgpolicyk8s.io
  names:
    plural: clusterpolicyreports
    singular: clusterpolicyreport
    shortNames:
      - cpolr
    kind: ClusterPolicyReport
    listKind: ClusterPolicyReportList
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: false
      schema:
        openAPIV3Schema:
          description: ClusterPolicyReport is the Schema for the clusterpolicyreports API
          type: object
          properties:
            apiVersion:
              description: >-
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: >-
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            results:
              description: PolicyReportResult provides result details
              type: array
              items:
                description: >-
                  PolicyReportResult provides the result for an individual
                  policy
                type: object
                required:
                  - policy
                properties:
                  category:
                    description: Category indicates policy category
                    type: string
                  data:
                    description: Data provides additional information for the policy rule
                    type: object
                    additionalProperties:
                      type: string
                  message:
                    description: >-
                      Message is a short user friendly description of the policy
                      rule
                    type: string
                  policy:
                    description: Policy is the name of the policy
                    type: string
                  resourceSelector:
                    description: >-
                      ResourceSelector is an optional selector for policy
                      results that apply to multiple resources. For example, a
                      policy result may apply to all pods that match a label.
                      Either a Resource or a ResourceSelector can be specified.
                      If neither are provided, the result is assumed to be for
                      the policy report scope.
                    type: object
                    properties:
                      matchExpressions:
                        description: >-
                          matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        type: array
                        items:
                          description: >-
                            A label selector requirement is a selector that
                            contains values, a key, and an operator that relates
                            the key and values.
                          type: object
                          required:
                            - key
                            - operator
                          properties:
                            key:
                              description: >-
                                key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description: >-
                                operator represents a key's relationship to a
                                set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: >-
                                values is an array of string values. If the
                                operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or
                                DoesNotExist, the values array must be empty.
                                This array is replaced during a strategic merge
                                patch.
                              type: array
                              items:
                                type: string
                      matchLabels:
                        description: >-
                          matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an
                          element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains
                          only "value". The requirements are ANDed.
                        type: object
                        additionalProperties:
                          type: string
                  resources:
                    description: >-
                      Resources is an optional reference to the resource checked
                      by the policy and rule
                    type: array
                    items:
                      description: >-
                        ObjectReference contains enough information to let you
                        inspect or modify the referred object. --- New uses of
                        this type are discouraged because of difficulty
                        describing its usage when embedded in APIs.  1. Ignored
                        fields.  It includes many fields which are not generally
                        honored.  For instance, ResourceVersion and FieldPath
                        are both very rarely valid in actual usage.  2. Invalid
                        usage help.  It is impossible to add specific help for
                        individual usage.  In most embedded usages, there are
                        particular     restrictions like, "must refer only to
                        types A and B" or "UID not honored" or "name must be
                        restricted".     Those cannot be well described when
                        embedded.  3. Inconsistent validation.  Because the
                        usages are different, the validation rules are different
                        by usage, which makes it hard for users to predict what
                        will happen.  4. The fields are both imprecise and
                        overly precise.  Kind is not a precise mapping to a URL.
                        This can produce ambiguity     during interpretation and
                        require a REST mapping.  In most cases, the dependency
                        is on the group,resource tuple     and the version of
                        the actual struct is irrelevant.  5. We cannot easily
                        change it.  Because this type is embedded in many
                        locations, updates to this type     will affect numerous
                        schemas.  Don't make new APIs embed an underspecified
                        API type they do not control. Instead of using this
                        type, create a locally provided and used type that is
                        well-focused on your reference. For example,
                        ServiceReferences for admission registration:
                        https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                        .
                      type: object
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: >-
                            If referring to a piece of an object instead of an
                            entire object, this string should contain a valid
                            JSON/Go field access statement, such as
                            desiredState.manifest.containers[2]. For example, if
                            the object reference is to a container within a pod,
                            this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the
                            name of the container that triggered the event) or
                            if no container name is specified
                            "spec.containers[2]" (container with index 2 in this
                            pod). This syntax is chosen only to have some
                            well-defined way of referencing a part of an object.
                            TODO: this design is not final and this field is
                            subject to change in the future.
                          type: string
                        kind:
                          description: >-
                            Kind of the referent. More info:
                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: >-
                            Name of the referent. More info:
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: >-
                            Namespace of the referent. More info:
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: >-
                            Specific resourceVersion to which this reference is
                            made, if any. More info:
                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: >-
                            UID of the referent. More info:
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                  rule:
                    description: Rule is the name of the policy rule
                    type: string
                  scored:
                    description: Scored indicates if this policy rule is scored
                    type: boolean
                  severity:
                    description: Severity indicates policy severity
                    type: string
                    enum:
                      - high
                      - low
                      - medium
                  status:
                    description: Status indicates the result of the policy rule check
                    type: string
                    enum:
                      - pass
                      - fail
                      - warn
                      - error
                      - skip
            scope:
              description: >-
                Scope is an optional reference to the report scope (e.g. a
                Deployment, Namespace, or Node)
              type: object
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: >-
                    If referring to a piece of an object instead of an entire
                    object, this string should contain a valid JSON/Go field
                    access statement, such as
                    desiredState.manifest.containers[2]. For example, if the
                    object reference is to a container within a pod, this would
                    take on a value like: "spec.containers{name}" (where "name"
                    refers to the name of the container that triggered the
                    event) or if no container name is specified
                    "spec.containers[2]" (container with index 2 in this pod).
                    This syntax is chosen only to have some well-defined way of
                    referencing a part of an object. TODO: this design is not
                    final and this field is subject to change in the future.
                  type: string
                kind:
                  description: >-
                    Kind of the referent. More info:
                    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                  type: string
                name:
                  description: >-
                    Name of the referent. More info:
                    https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                  type: string
                namespace:
                  description: >-
                    Namespace of the referent. More info:
                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                  type: string
                resourceVersion:
                  description: >-
                    Specific resourceVersion to which this reference is made, if
                    any. More info:
                    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                  type: string
                uid:
                  description: >-
                    UID of the referent. More info:
                    https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                  type: string
            scopeSelector:
              description: >-
                ScopeSelector is an optional selector for multiple scopes (e.g.
                Pods). Either one of, or none of, but not both of, Scope or
                ScopeSelector should be specified.
              type: object
              properties:
                matchExpressions:
                  description: >-
                    matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  type: array
                  items:
                    description: >-
                      A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and
                      values.
                    type: object
                    required:
                      - key
                      - operator
                    properties:
                      key:
                        description: key is the label key that the selector applies to.
                        type: string
                      operator:
                        description: >-
                          operator represents a key's relationship to a set of
                          values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: >-
                          values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If
                          the operator is Exists or DoesNotExist, the values
                          array must be empty. This array is replaced during a
                          strategic merge patch.
                        type: array
                        items:
                          type: string
                matchLabels:
                  description: >-
                    matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an
                    element of matchExpressions, whose key field is "key", the
                    operator is "In", and the values array contains only
                    "value". The requirements are ANDed.
                  type: object
                  additionalProperties:
                    type: string
            summary:
              description: PolicyReportSummary provides a summary of results
              type: object
              properties:
                error:
                  description: >-
                    Error provides the count of policies that could not be
                    evaluated
                  type: integer
                fail:
                  description: >-
                    Fail provides the count of policies whose requirements were
                    not met
                  type: integer
                pass:
                  description: >-
                    Pass provides the count of policies whose requirements were
                    met
                  type: integer
                skip:
                  description: >-
                    Skip indicates the count of policies that were not selected
                    for evaluation
                  type: integer
                warn:
                  description: >-
                    Warn provides the count of unscored policies whose
                    requirements were not met
                  type: integer
      subresources: {}
      additionalPrinterColumns:
        - name: Kind
          type: string
          priority: 1
          jsonPath: .scope.kind
        - name: Name
          type: string
          priority: 1
          jsonPath: .scope.name
        - name: Pass
          type: integer
          jsonPath: .summary.pass
        - name: Fail
          type: integer
          jsonPath: .summary.fail
        - name: Warn
          type: integer
          jsonPath: .summary.warn
        - name: Error
          type: integer
          jsonPath: .summary.error
        - name: Skip
          type: integer
          jsonPath: .summary.skip
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
    - name: v1alpha2
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: ClusterPolicyReport is the Schema for the clusterpolicyreports API
          type: object
          properties:
            apiVersion:
              description: >-
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: >-
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            results:
              description: PolicyReportResult provides result details
              type: array
              items:
                description: >-
                  PolicyReportResult provides the result for an individual
                  policy
                type: object
                required:
                  - policy
                properties:
                  category:
                    description: Category indicates policy category
                    type: string
                  message:
                    description: >-
                      Message is a short user friendly description of the policy
                      rule
                    type: string
                  policy:
                    description: Policy is the name of the policy
                    type: string
                  properties:
                    description: >-
                      Properties provides additional information for the policy
                      rule
                    type: object
                    additionalProperties:
                      type: string
                  resourceSelector:
                    description: >-
                      ResourceSelector is an optional selector for policy
                      results that apply to multiple resources. For example, a
                      policy result may apply to all pods that match a label.
                      Either a Resource or a ResourceSelector can be specified.
                      If neither are provided, the result is assumed to be for
                      the policy report scope.
                    type: object
                    properties:
                      matchExpressions:
                        description: >-
                          matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        type: array
                        items:
                          description: >-
                            A label selector requirement is a selector that
                            contains values, a key, and an operator that relates
                            the key and values.
                          type: object
                          required:
                            - key
                            - operator
                          properties:
                            key:
                              description: >-
                                key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description: >-
                                operator represents a key's relationship to a
                                set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: >-
                                values is an array of string values. If the
                                operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or
                                DoesNotExist, the values array must be empty.
                                This array is replaced during a strategic merge
                                patch.
                              type: array
                              items:
                                type: string
                      matchLabels:
                        description: >-
                          matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an
                          element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains
                          only "value". The requirements are ANDed.
                        type: object
                        additionalProperties:
                          type: string
                  resources:
                    description: >-
                      Resources is an optional reference to the resource checked
                      by the policy and rule
                    type: array
                    items:
                      description: >-
                        ObjectReference contains enough information to let you
                        inspect or modify the referred object. --- New uses of
                        this type are discouraged because of difficulty
                        describing its usage when embedded in APIs.  1. Ignored
                        fields.  It includes many fields which are not generally
                        honored.  For instance, ResourceVersion and FieldPath
                        are both very rarely valid in actual usage.  2. Invalid
                        usage help.  It is impossible to add specific help for
                        individual usage.  In most embedded usages, there are
                        particular     restrictions like, "must refer only to
                        types A and B" or "UID not honored" or "name must be
                        restricted".     Those cannot be well described when
                        embedded.  3. Inconsistent validation.  Because the
                        usages are different, the validation rules are different
                        by usage, which makes it hard for users to predict what
                        will happen.  4. The fields are both imprecise and
                        overly precise.  Kind is not a precise mapping to a URL.
                        This can produce ambiguity     during interpretation and
                        require a REST mapping.  In most cases, the dependency
                        is on the group,resource tuple     and the version of
                        the actual struct is irrelevant.  5. We cannot easily
                        change it.  Because this type is embedded in many
                        locations, updates to this type     will affect numerous
                        schemas.  Don't make new APIs embed an underspecified
                        API type they do not control. Instead of using this
                        type, create a locally provided and used type that is
                        well-focused on your reference. For example,
                        ServiceReferences for admission registration:
                        https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                        .
                      type: object
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: >-
                            If referring to a piece of an object instead of an
                            entire object, this string should contain a valid
                            JSON/Go field access statement, such as
                            desiredState.manifest.containers[2]. For example, if
                            the object reference is to a container within a pod,
                            this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the
                            name of the container that triggered the event) or
                            if no container name is specified
                            "spec.containers[2]" (container with index 2 in this
                            pod). This syntax is chosen only to have some
                            well-defined way of referencing a part of an object.
                            TODO: this design is not final and this field is
                            subject to change in the future.
                          type: string
                        kind:
                          description: >-
                            Kind of the referent. More info:
                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: >-
                            Name of the referent. More info:
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: >-
                            Namespace of the referent. More info:
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: >-
                            Specific resourceVersion to which this reference is
                            made, if any. More info:
                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: >-
                            UID of the referent. More info:
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                  result:
                    description: Result indicates the outcome of the policy rule execution
                    type: string
                    enum:
                      - pass
                      - fail
                      - warn
                      - error
                      - skip
                  rule:
                    description: Rule is the name of the policy rule
                    type: string
                  scored:
                    description: Scored indicates if this policy rule is scored
                    type: boolean
                  severity:
                    description: Severity indicates policy severity
                    type: string
                    enum:
                      - high
                      - low
                      - medium
                  source:
                    description: >-
                      Source is an identifier for the policy engine that manages
                      this report
                    type: string
                  timestamp:
                    description: Timestamp indicates the time the result was found
                    type: object
                    required:
                      - nanos
                      - seconds
                    properties:
                      nanos:
                        description: >-
                          Non-negative fractions of a second at nanosecond
                          resolution. Negative second values with fractions must
                          still have non-negative nanos values that count
                          forward in time. Must be from 0 to 999,999,999
                          inclusive. This field may be limited in precision
                          depending on context.
                        type: integer
                        format: int32
                      seconds:
                        description: >-
                          Represents seconds of UTC time since Unix epoch
                          1970-01-01T00:00:00Z. Must be from
                          0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z
                          inclusive.
                        type: integer
                        format: int64
            scope:
              description: >-
                Scope is an optional reference to the report scope (e.g. a
                Deployment, Namespace, or Node)
              type: object
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: >-
                    If referring to a piece of an object instead of an entire
                    object, this string should contain a valid JSON/Go field
                    access statement, such as
                    desiredState.manifest.containers[2]. For example, if the
                    object reference is to a container within a pod, this would
                    take on a value like: "spec.containers{name}" (where "name"
                    refers to the name of the container that triggered the
                    event) or if no container name is specified
                    "spec.containers[2]" (container with index 2 in this pod).
                    This syntax is chosen only to have some well-defined way of
                    referencing a part of an object. TODO: this design is not
                    final and this field is subject to change in the future.
                  type: string
                kind:
                  description: >-
                    Kind of the referent. More info:
                    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                  type: string
                name:
                  description: >-
                    Name of the referent. More info:
                    https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                  type: string
                namespace:
                  description: >-
                    Namespace of the referent. More info:
                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                  type: string
                resourceVersion:
                  description: >-
                    Specific resourceVersion to which this reference is made, if
                    any. More info:
                    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                  type: string
                uid:
                  description: >-
                    UID of the referent. More info:
                    https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                  type: string
            scopeSelector:
              description: >-
                ScopeSelector is an optional selector for multiple scopes (e.g.
                Pods). Either one of, or none of, but not both of, Scope or
                ScopeSelector should be specified.
              type: object
              properties:
                matchExpressions:
                  description: >-
                    matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  type: array
                  items:
                    description: >-
                      A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and
                      values.
                    type: object
                    required:
                      - key
                      - operator
                    properties:
                      key:
                        description: key is the label key that the selector applies to.
                        type: string
                      operator:
                        description: >-
                          operator represents a key's relationship to a set of
                          values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: >-
                          values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If
                          the operator is Exists or DoesNotExist, the values
                          array must be empty. This array is replaced during a
                          strategic merge patch.
                        type: array
                        items:
                          type: string
                matchLabels:
                  description: >-
                    matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an
                    element of matchExpressions, whose key field is "key", the
                    operator is "In", and the values array contains only
                    "value". The requirements are ANDed.
                  type: object
                  additionalProperties:
                    type: string
            summary:
              description: PolicyReportSummary provides a summary of results
              type: object
              properties:
                error:
                  description: >-
                    Error provides the count of policies that could not be
                    evaluated
                  type: integer
                fail:
                  description: >-
                    Fail provides the count of policies whose requirements were
                    not met
                  type: integer
                pass:
                  description: >-
                    Pass provides the count of policies whose requirements were
                    met
                  type: integer
                skip:
                  description: >-
                    Skip indicates the count of policies that were not selected
                    for evaluation
                  type: integer
                warn:
                  description: >-
                    Warn provides the count of unscored policies whose
                    requirements were not met
                  type: integer
      subresources: {}
      additionalPrinterColumns:
        - name: Kind
          type: string
          priority: 1
          jsonPath: .scope.kind
        - name: Name
          type: string
          priority: 1
          jsonPath: .scope.name
        - name: Pass
          type: integer
          jsonPath: .summary.pass
        - name: Fail
          type: integer
          jsonPath: .summary.fail
        - name: Warn
          type: integer
          jsonPath: .summary.warn
        - name: Error
          type: integer
          jsonPath: .summary.error
        - name: Skip
          type: integer
          jsonPath: .summary.skip
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
  conversion:
    strategy: None
