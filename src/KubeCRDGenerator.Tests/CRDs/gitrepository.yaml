apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: gitrepositories.source.toolkit.fluxcd.io
  selfLink: >-
    /apis/apiextensions.k8s.io/v1/customresourcedefinitions/gitrepositories.source.toolkit.fluxcd.io
  uid: ba8e45c5-07cf-43ef-86ee-fceb89b7f6f4
  resourceVersion: '70868561'
  generation: 5
  creationTimestamp: '2021-11-18T05:38:08Z'
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: v0.28.5
    kustomize.toolkit.fluxcd.io/name: app
    kustomize.toolkit.fluxcd.io/namespace: flux-system
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  managedFields:
    - manager: flux
      operation: Apply
      apiVersion: apiextensions.k8s.io/v1
      time: '2021-11-18T05:38:08Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
        f:spec:
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:scope: {}
    - manager: kustomize-controller
      operation: Apply
      apiVersion: apiextensions.k8s.io/v1
      time: '2022-03-30T20:04:56Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:controller-gen.kubebuilder.io/version: {}
          f:labels:
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:kustomize.toolkit.fluxcd.io/name: {}
            f:kustomize.toolkit.fluxcd.io/namespace: {}
        f:spec:
          f:group: {}
          f:names:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:scope: {}
          f:versions: {}
    - manager: kubelite
      operation: Update
      apiVersion: apiextensions.k8s.io/v1
      time: '2021-11-18T05:38:08Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:acceptedNames:
            f:kind: {}
            f:listKind: {}
            f:plural: {}
            f:shortNames: {}
            f:singular: {}
          f:conditions:
            k:{"type":"Established"}:
              .: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"NamesAccepted"}:
              .: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      subresource: status
status:
  conditions:
    - type: NamesAccepted
      status: 'True'
      lastTransitionTime: '2021-11-18T05:38:08Z'
      reason: NoConflicts
      message: no conflicts found
    - type: Established
      status: 'True'
      lastTransitionTime: '2021-11-18T05:38:08Z'
      reason: InitialNamesAccepted
      message: the initial names have been accepted
  acceptedNames:
    plural: gitrepositories
    singular: gitrepository
    shortNames:
      - gitrepo
    kind: GitRepository
    listKind: GitRepositoryList
  storedVersions:
    - v1beta1
    - v1beta2
spec:
  group: source.toolkit.fluxcd.io
  names:
    plural: gitrepositories
    singular: gitrepository
    shortNames:
      - gitrepo
    kind: GitRepository
    listKind: GitRepositoryList
  scope: Namespaced
  versions:
    - name: v1beta1
      served: true
      storage: false
      schema:
        openAPIV3Schema:
          description: GitRepository is the Schema for the gitrepositories API
          type: object
          properties:
            apiVersion:
              description: >-
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: >-
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: GitRepositorySpec defines the desired state of a Git repository.
              type: object
              required:
                - interval
                - url
              properties:
                accessFrom:
                  description: >-
                    AccessFrom defines an Access Control List for allowing
                    cross-namespace references to this object.
                  type: object
                  required:
                    - namespaceSelectors
                  properties:
                    namespaceSelectors:
                      description: >-
                        NamespaceSelectors is the list of namespace selectors to
                        which this ACL applies. Items in this list are evaluated
                        using a logical OR operation.
                      type: array
                      items:
                        description: >-
                          NamespaceSelector selects the namespaces to which this
                          ACL applies. An empty map of MatchLabels matches all
                          namespaces in a cluster.
                        type: object
                        properties:
                          matchLabels:
                            description: >-
                              MatchLabels is a map of {key,value} pairs. A
                              single {key,value} in the matchLabels map is
                              equivalent to an element of matchExpressions,
                              whose key field is "key", the operator is "In",
                              and the values array contains only "value". The
                              requirements are ANDed.
                            type: object
                            additionalProperties:
                              type: string
                gitImplementation:
                  description: >-
                    Determines which git client library to use. Defaults to
                    go-git, valid values are ('go-git', 'libgit2').
                  type: string
                  default: go-git
                  enum:
                    - go-git
                    - libgit2
                ignore:
                  description: >-
                    Ignore overrides the set of excluded patterns in the
                    .sourceignore format (which is the same as .gitignore). If
                    not provided, a default will be used, consult the
                    documentation for your version to find out what those are.
                  type: string
                include:
                  description: Extra git repositories to map into the repository
                  type: array
                  items:
                    description: >-
                      GitRepositoryInclude defines a source with a from and to
                      path.
                    type: object
                    required:
                      - repository
                    properties:
                      fromPath:
                        description: >-
                          The path to copy contents from, defaults to the root
                          directory.
                        type: string
                      repository:
                        description: Reference to a GitRepository to include.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                      toPath:
                        description: >-
                          The path to copy contents to, defaults to the name of
                          the source ref.
                        type: string
                interval:
                  description: The interval at which to check for repository updates.
                  type: string
                recurseSubmodules:
                  description: >-
                    When enabled, after the clone is created, initializes all
                    submodules within, using their default settings. This option
                    is available only when using the 'go-git' GitImplementation.
                  type: boolean
                ref:
                  description: >-
                    The Git reference to checkout and monitor for changes,
                    defaults to master branch.
                  type: object
                  properties:
                    branch:
                      description: The Git branch to checkout, defaults to master.
                      type: string
                    commit:
                      description: >-
                        The Git commit SHA to checkout, if specified Tag filters
                        will be ignored.
                      type: string
                    semver:
                      description: >-
                        The Git tag semver expression, takes precedence over
                        Tag.
                      type: string
                    tag:
                      description: The Git tag to checkout, takes precedence over Branch.
                      type: string
                secretRef:
                  description: >-
                    The secret name containing the Git credentials. For HTTPS
                    repositories the secret must contain username and password
                    fields. For SSH repositories the secret must contain
                    identity, identity.pub and known_hosts fields.
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                suspend:
                  description: >-
                    This flag tells the controller to suspend the reconciliation
                    of this source.
                  type: boolean
                timeout:
                  description: >-
                    The timeout for remote Git operations like cloning, defaults
                    to 60s.
                  type: string
                  default: 60s
                url:
                  description: The repository URL, can be a HTTP/S or SSH address.
                  type: string
                  pattern: ^(http|https|ssh)://
                verify:
                  description: Verify OpenPGP signature for the Git commit HEAD points to.
                  type: object
                  required:
                    - mode
                  properties:
                    mode:
                      description: >-
                        Mode describes what git object should be verified,
                        currently ('head').
                      type: string
                      enum:
                        - head
                    secretRef:
                      description: >-
                        The secret name containing the public keys of all
                        trusted Git authors.
                      type: object
                      required:
                        - name
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
            status:
              description: >-
                GitRepositoryStatus defines the observed state of a Git
                repository.
              type: object
              default:
                observedGeneration: -1
              properties:
                artifact:
                  description: >-
                    Artifact represents the output of the last successful
                    repository sync.
                  type: object
                  required:
                    - path
                    - url
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: >-
                        LastUpdateTime is the timestamp corresponding to the
                        last update of this artifact.
                      type: string
                      format: date-time
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: >-
                        Revision is a human readable identifier traceable in the
                        origin source system. It can be a Git commit SHA, Git
                        tag, a Helm index timestamp, a Helm chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                conditions:
                  description: Conditions holds the conditions for the GitRepository.
                  type: array
                  items:
                    description: >-
                      Condition contains details for one aspect of the current
                      state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path
                      .status.conditions.  For example, type FooStatus
                      struct{     // Represents the observations of a foo's
                      current state.     // Known .status.conditions.type are:
                      "Available", "Progressing", and "Degraded"     //
                      +patchMergeKey=type     // +patchStrategy=merge     //
                      +listType=map     // +listMapKey=type     Conditions
                      []metav1.Condition `json:"conditions,omitempty"
                      patchStrategy:"merge" patchMergeKey:"type"
                      protobuf:"bytes,1,rep,name=conditions"` 
                           // other fields }
                    type: object
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: >-
                          lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should
                          be when the underlying condition changed.  If that is
                          not known, then using the time when the API field
                          changed is acceptable.
                        type: string
                        format: date-time
                      message:
                        description: >-
                          message is a human readable message indicating details
                          about the transition. This may be an empty string.
                        type: string
                        maxLength: 32768
                      observedGeneration:
                        description: >-
                          observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance,
                          if .metadata.generation is currently 12, but the
                          .status.conditions[x].observedGeneration is 9, the
                          condition is out of date with respect to the current
                          state of the instance.
                        type: integer
                        format: int64
                        minimum: 0
                      reason:
                        description: >-
                          reason contains a programmatic identifier indicating
                          the reason for the condition's last transition.
                          Producers of specific condition types may define
                          expected values and meanings for this field, and
                          whether the values are considered a guaranteed API.
                          The value should be a CamelCase string. This field may
                          not be empty.
                        type: string
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                      type:
                        description: >-
                          type of condition in CamelCase or in
                          foo.example.com/CamelCase. --- Many .condition.type
                          values are consistent across resources like Available,
                          but because arbitrary conditions can be useful (see
                          .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is
                          (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        type: string
                        maxLength: 316
                        pattern: >-
                          ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                includedArtifacts:
                  description: >-
                    IncludedArtifacts represents the included artifacts from the
                    last successful repository sync.
                  type: array
                  items:
                    description: >-
                      Artifact represents the output of a source
                      synchronisation.
                    type: object
                    required:
                      - path
                      - url
                    properties:
                      checksum:
                        description: Checksum is the SHA256 checksum of the artifact.
                        type: string
                      lastUpdateTime:
                        description: >-
                          LastUpdateTime is the timestamp corresponding to the
                          last update of this artifact.
                        type: string
                        format: date-time
                      path:
                        description: Path is the relative file path of this artifact.
                        type: string
                      revision:
                        description: >-
                          Revision is a human readable identifier traceable in
                          the origin source system. It can be a Git commit SHA,
                          Git tag, a Helm index timestamp, a Helm chart version,
                          etc.
                        type: string
                      url:
                        description: URL is the HTTP address of this artifact.
                        type: string
                lastHandledReconcileAt:
                  description: >-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  type: integer
                  format: int64
                url:
                  description: >-
                    URL is the download link for the artifact output of the last
                    repository sync.
                  type: string
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .spec.url
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=="Ready")].status
        - name: Status
          type: string
          jsonPath: .status.conditions[?(@.type=="Ready")].message
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
    - name: v1beta2
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: GitRepository is the Schema for the gitrepositories API.
          type: object
          properties:
            apiVersion:
              description: >-
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: >-
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: >-
                GitRepositorySpec specifies the required configuration to
                produce an Artifact for a Git repository.
              type: object
              required:
                - interval
                - url
              properties:
                accessFrom:
                  description: >-
                    AccessFrom specifies an Access Control List for allowing
                    cross-namespace references to this object. NOTE: Not
                    implemented, provisional as of
                    https://github.com/fluxcd/flux2/pull/2092
                  type: object
                  required:
                    - namespaceSelectors
                  properties:
                    namespaceSelectors:
                      description: >-
                        NamespaceSelectors is the list of namespace selectors to
                        which this ACL applies. Items in this list are evaluated
                        using a logical OR operation.
                      type: array
                      items:
                        description: >-
                          NamespaceSelector selects the namespaces to which this
                          ACL applies. An empty map of MatchLabels matches all
                          namespaces in a cluster.
                        type: object
                        properties:
                          matchLabels:
                            description: >-
                              MatchLabels is a map of {key,value} pairs. A
                              single {key,value} in the matchLabels map is
                              equivalent to an element of matchExpressions,
                              whose key field is "key", the operator is "In",
                              and the values array contains only "value". The
                              requirements are ANDed.
                            type: object
                            additionalProperties:
                              type: string
                gitImplementation:
                  description: >-
                    GitImplementation specifies which Git client library
                    implementation to use. Defaults to 'go-git', valid values
                    are ('go-git', 'libgit2').
                  type: string
                  default: go-git
                  enum:
                    - go-git
                    - libgit2
                ignore:
                  description: >-
                    Ignore overrides the set of excluded patterns in the
                    .sourceignore format (which is the same as .gitignore). If
                    not provided, a default will be used, consult the
                    documentation for your version to find out what those are.
                  type: string
                include:
                  description: >-
                    Include specifies a list of GitRepository resources which
                    Artifacts should be included in the Artifact produced for
                    this GitRepository.
                  type: array
                  items:
                    description: >-
                      GitRepositoryInclude specifies a local reference to a
                      GitRepository which Artifact (sub-)contents must be
                      included, and where they should be placed.
                    type: object
                    required:
                      - repository
                    properties:
                      fromPath:
                        description: >-
                          FromPath specifies the path to copy contents from,
                          defaults to the root of the Artifact.
                        type: string
                      repository:
                        description: >-
                          GitRepositoryRef specifies the GitRepository which
                          Artifact contents must be included.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                      toPath:
                        description: >-
                          ToPath specifies the path to copy contents to,
                          defaults to the name of the GitRepositoryRef.
                        type: string
                interval:
                  description: Interval at which to check the GitRepository for updates.
                  type: string
                recurseSubmodules:
                  description: >-
                    RecurseSubmodules enables the initialization of all
                    submodules within the GitRepository as cloned from the URL,
                    using their default settings. This option is available only
                    when using the 'go-git' GitImplementation.
                  type: boolean
                ref:
                  description: >-
                    Reference specifies the Git reference to resolve and monitor
                    for changes, defaults to the 'master' branch.
                  type: object
                  properties:
                    branch:
                      description: >-
                        Branch to check out, defaults to 'master' if no other
                        field is defined. 
                         When GitRepositorySpec.GitImplementation is set to 'go-git', a shallow clone of the specified branch is performed.
                      type: string
                    commit:
                      description: >-
                        Commit SHA to check out, takes precedence over all
                        reference fields. 
                         When GitRepositorySpec.GitImplementation is set to 'go-git', this can be combined with Branch to shallow clone the branch, in which the commit is expected to exist.
                      type: string
                    semver:
                      description: >-
                        SemVer tag expression to check out, takes precedence
                        over Tag.
                      type: string
                    tag:
                      description: Tag to check out, takes precedence over Branch.
                      type: string
                secretRef:
                  description: >-
                    SecretRef specifies the Secret containing authentication
                    credentials for the GitRepository. For HTTPS repositories
                    the Secret must contain 'username' and 'password' fields.
                    For SSH repositories the Secret must contain 'identity',
                    'identity.pub' and 'known_hosts' fields.
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                suspend:
                  description: >-
                    Suspend tells the controller to suspend the reconciliation
                    of this GitRepository.
                  type: boolean
                timeout:
                  description: Timeout for Git operations like cloning, defaults to 60s.
                  type: string
                  default: 60s
                url:
                  description: >-
                    URL specifies the Git repository URL, it can be an HTTP/S or
                    SSH address.
                  type: string
                  pattern: ^(http|https|ssh)://
                verify:
                  description: >-
                    Verification specifies the configuration to verify the Git
                    commit signature(s).
                  type: object
                  required:
                    - mode
                  properties:
                    mode:
                      description: >-
                        Mode specifies what Git object should be verified,
                        currently ('head').
                      type: string
                      enum:
                        - head
                    secretRef:
                      description: >-
                        SecretRef specifies the Secret containing the public
                        keys of trusted Git authors.
                      type: object
                      required:
                        - name
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
            status:
              description: >-
                GitRepositoryStatus records the observed state of a Git
                repository.
              type: object
              default:
                observedGeneration: -1
              properties:
                artifact:
                  description: >-
                    Artifact represents the last successful GitRepository
                    reconciliation.
                  type: object
                  required:
                    - path
                    - url
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the Artifact file.
                      type: string
                    lastUpdateTime:
                      description: >-
                        LastUpdateTime is the timestamp corresponding to the
                        last update of the Artifact.
                      type: string
                      format: date-time
                    path:
                      description: >-
                        Path is the relative file path of the Artifact. It can
                        be used to locate the file in the root of the Artifact
                        storage on the local file system of the controller
                        managing the Source.
                      type: string
                    revision:
                      description: >-
                        Revision is a human-readable identifier traceable in the
                        origin source system. It can be a Git commit SHA, Git
                        tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      type: integer
                      format: int64
                    url:
                      description: >-
                        URL is the HTTP address of the Artifact as exposed by
                        the controller managing the Source. It can be used to
                        retrieve the Artifact for consumption, e.g. by another
                        controller applying the Artifact contents.
                      type: string
                conditions:
                  description: Conditions holds the conditions for the GitRepository.
                  type: array
                  items:
                    description: >-
                      Condition contains details for one aspect of the current
                      state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path
                      .status.conditions.  For example, type FooStatus
                      struct{     // Represents the observations of a foo's
                      current state.     // Known .status.conditions.type are:
                      "Available", "Progressing", and "Degraded"     //
                      +patchMergeKey=type     // +patchStrategy=merge     //
                      +listType=map     // +listMapKey=type     Conditions
                      []metav1.Condition `json:"conditions,omitempty"
                      patchStrategy:"merge" patchMergeKey:"type"
                      protobuf:"bytes,1,rep,name=conditions"` 
                           // other fields }
                    type: object
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: >-
                          lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should
                          be when the underlying condition changed.  If that is
                          not known, then using the time when the API field
                          changed is acceptable.
                        type: string
                        format: date-time
                      message:
                        description: >-
                          message is a human readable message indicating details
                          about the transition. This may be an empty string.
                        type: string
                        maxLength: 32768
                      observedGeneration:
                        description: >-
                          observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance,
                          if .metadata.generation is currently 12, but the
                          .status.conditions[x].observedGeneration is 9, the
                          condition is out of date with respect to the current
                          state of the instance.
                        type: integer
                        format: int64
                        minimum: 0
                      reason:
                        description: >-
                          reason contains a programmatic identifier indicating
                          the reason for the condition's last transition.
                          Producers of specific condition types may define
                          expected values and meanings for this field, and
                          whether the values are considered a guaranteed API.
                          The value should be a CamelCase string. This field may
                          not be empty.
                        type: string
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                      type:
                        description: >-
                          type of condition in CamelCase or in
                          foo.example.com/CamelCase. --- Many .condition.type
                          values are consistent across resources like Available,
                          but because arbitrary conditions can be useful (see
                          .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is
                          (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        type: string
                        maxLength: 316
                        pattern: >-
                          ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                includedArtifacts:
                  description: >-
                    IncludedArtifacts contains a list of the last successfully
                    included Artifacts as instructed by
                    GitRepositorySpec.Include.
                  type: array
                  items:
                    description: Artifact represents the output of a Source reconciliation.
                    type: object
                    required:
                      - path
                      - url
                    properties:
                      checksum:
                        description: Checksum is the SHA256 checksum of the Artifact file.
                        type: string
                      lastUpdateTime:
                        description: >-
                          LastUpdateTime is the timestamp corresponding to the
                          last update of the Artifact.
                        type: string
                        format: date-time
                      path:
                        description: >-
                          Path is the relative file path of the Artifact. It can
                          be used to locate the file in the root of the Artifact
                          storage on the local file system of the controller
                          managing the Source.
                        type: string
                      revision:
                        description: >-
                          Revision is a human-readable identifier traceable in
                          the origin source system. It can be a Git commit SHA,
                          Git tag, a Helm chart version, etc.
                        type: string
                      size:
                        description: Size is the number of bytes in the file.
                        type: integer
                        format: int64
                      url:
                        description: >-
                          URL is the HTTP address of the Artifact as exposed by
                          the controller managing the Source. It can be used to
                          retrieve the Artifact for consumption, e.g. by another
                          controller applying the Artifact contents.
                        type: string
                lastHandledReconcileAt:
                  description: >-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: >-
                    ObservedGeneration is the last observed generation of the
                    GitRepository object.
                  type: integer
                  format: int64
                url:
                  description: >-
                    URL is the dynamic fetch link for the latest Artifact. It is
                    provided on a "best effort" basis, and using the precise
                    GitRepositoryStatus.Artifact data is recommended.
                  type: string
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: URL
          type: string
          jsonPath: .spec.url
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=="Ready")].status
        - name: Status
          type: string
          jsonPath: .status.conditions[?(@.type=="Ready")].message
  conversion:
    strategy: None
